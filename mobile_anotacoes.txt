dispositiveis móveis
- possibilidade de locomoção
- autonomia de energia
- recurso de conectividade (acessar rede)
- compartilhamento

plataformas
- ios > ObjectiveC,  Swift -> linguagem nativa
- android > java, kotlin -> linguagem nativa



mobile - dispositivo movel

suift - desenvolver IOS

nativo -> linguagem mais proxima sistema operacional
hibrido -> linguagem que consegue se ligar com as duas plataformas, ios e android


=-=-=-=-=-=-=-=-=-=
nativos --> usar quando for necessario = segurança, performace, facilidade do uso dos recursos.
comunica direto com o recurso do sistema operacional
*vantagem
- alta performace
- mais facil de monetizar
*desvantagem
- ele tem curva de aprendizado alto, custo maior de treinamento
- custo alto para desenvolver nele pq precisa de duas linguagens e duas equipes de desenvolvimento (ios, android)
- ocupa mais espaço no smartphone


web application/progressive web aplication > pwa:
-->usar quando ocupar espaço no dispositivo do usuario for um problema.
rodam no browser, conteiner.
pwa -> site que se comporta como aplicativo, qnd for aberto no smartphone.
*vantagem
- curva de aprendizado pequena e nao tem cursto muito alto de movimento
*desvantagem
- não tem segurança, e sem acesso aos recursos


hibridos:
--> usar quando for necessario ganhar velocidade no desenvolvimento e diminuir o custo.
programa cria aplicativo para todas as plataformas possiveis. multiplataforma.
uiliza um unico código
*vantagem
- curva de aprendizado pequena
- tem custo de desenvolvimento barato pq precisa de uma equipe só
- é leve
*desvantagem
- não é tão seguro quanto o nativo
- sem tanta facilidade dos recursos do dispositivo


adk
android develop k?

